{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;;AAAgD;;;;AAIhD;AACA;AACA;AACA,yBAAyB,QAAQ;AACjC,iCAAiC,KAAK;AACtC;AACA;;AAEA,iEAAe,eAAe,EAAC;AAC/B;;;;;;;;;;;;;;;;;;;;;ACZA;;AAEA;AACA;AACA;AACA,sCAAsC,IAAI,YAAY,gBAAgB;AACtE;AACA;AACA;AACA;;AAEA,iEAAe,SAAS,EAAC;;;;;;;;UCZzB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;ACN4C;AACM;;;AAGlD;;AAEA;AACA;AACA;;;AAGA,IAAI,8DAAS;AACb;AACA;AACA,gBAAgB,8DAAe;AAC/B,aAAa;AACb,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,8DAAS;AACrB;AACA;AACA;AACA;AACA,4BAA4B,8DAAe;AAC3C,yBAAyB;AACzB;AACA;AACA,iBAAiB;AACjB,aAAa;;AAEb,SAAS;;AAET;;;;;;AAMA,sEAAsE,KAAK,sBAAsB,SAAS;AAC1G;AACA;AACA,qCAAqC,UAAU;AAC/C,2CAA2C,eAAe;AAC1D,+CAA+C,qBAAqB;AACpE,2CAA2C,4BAA4B;AACvE,yCAAyC,mBAAmB;AAC5D,+CAA+C,iBAAiB;AAChE,oCAAoC,oBAAoB;AACxD,YAAY;;;;;;;;;;;AAWZ,6BAA6B,UAAU;AACvC,mCAAmC,eAAe;AAClD,uCAAuC,qBAAqB;AAC5D,mCAAmC,4BAA4B;AAC/D,iCAAiC,mBAAmB;AACpD,uCAAuC,iBAAiB;AACxD,4BAA4B,oBAAoB;;;;;AAKhD,CAAC","sources":["webpack://weather/./src/js/modules/test/test.js","webpack://weather/./src/js/services/servises.js","webpack://weather/webpack/bootstrap","webpack://weather/webpack/runtime/define property getters","webpack://weather/webpack/runtime/hasOwnProperty shorthand","webpack://weather/webpack/runtime/make namespace object","webpack://weather/./src/js/script.js"],"sourcesContent":["import getRequst from \"../../services/servises\";\n\n\n\nfunction createTegOption(id, country, iso2) {\n    const input = document.querySelector(id)\n    const teg = document.createElement('option');\n    teg.textContent = `${country}`;\n    teg.setAttribute('value', `${iso2}`)\n    input.append(teg);\n}\n\nexport default createTegOption;\n   \n\n\n\n\n\n","\nconst getRequst = async (url) => {\n\n    const response = await fetch(url);\n    \n    if (!response.ok) {\n        throw new Error(`ERROR url: ${url}, status: ${response.status}`)\n    }\n        \n    return await response.json();\n}\n\nexport default getRequst;\n\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import getRequst from \"./services/servises\";\nimport createTegOption from \"./modules/test/test\";\n\n\nwindow.addEventListener('DOMContentLoaded', () => {\n\n    const myApiKey = 'c09f348734566ce0124f07e10c69908e';\n    let city = '';\n    let key = '';\n\n\n    getRequst('https://countriesnow.space/api/v0.1/countries')\n        .then(data => {\n            data.data.forEach(element => {\n                createTegOption('#country', element.country, element.iso2);\n            });\n        });\n\n        const inputCountry = document.querySelector('#country');\n        const inputCities = document.querySelector('#cities');\n\n        inputCountry.addEventListener('change', () => {\n            key = inputCountry.value;\n            inputCities.textContent = '';\n            \n            getRequst('https://countriesnow.space/api/v0.1/countries')\n            .then(data => {\n                data.data.forEach(element => {\n                    if (key === element.iso2) {\n                        element.cities.forEach(item => {\n                            createTegOption('#cities', item);\n                        })\n                        \n                    }\n                });\n            });    \n\n        });\n\n       \n\n\n\n\n\n    // getRequst(`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${myApiKey}`)\n    //     .then(data => {\n    //         console.log(data)\n    //         console.log(`Місто: ${data.name}`);\n    //         console.log(`Температура: ${data.main.temp}°C`);\n    //         console.log(`Відчувається як: ${data.main.feels_like}°C`);\n    //         console.log(`Опис погоди: ${data.weather[0].description}`);\n    //         console.log(`Вологість: ${data.main.humidity}%`);\n    //         console.log(`Швидкість вітру: ${data.wind.speed} м/с`);\n    //         console.log(`Тиск: ${data.main.pressure} гПа`);\n    //     });\n\n\n\n\n\n\n\n\n\n\n    // console.log(`Місто: ${data.name}`);\n    // console.log(`Температура: ${data.main.temp}°C`);\n    // console.log(`Відчувається як: ${data.main.feels_like}°C`);\n    // console.log(`Опис погоди: ${data.weather[0].description}`);\n    // console.log(`Вологість: ${data.main.humidity}%`);\n    // console.log(`Швидкість вітру: ${data.wind.speed} м/с`);\n    // console.log(`Тиск: ${data.main.pressure} гПа`);\n\n\n\n\n});\n\n\n"],"names":[],"sourceRoot":""}